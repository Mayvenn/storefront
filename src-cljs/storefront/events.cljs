(ns storefront.events)

(def navigate [:navigation])
(def navigate-home (conj navigate :home))
(def navigate-category (conj navigate :category))
(def navigate-product (conj navigate :product))
(def navigate-guarantee (conj navigate :guarantee))
(def navigate-help (conj navigate :help))
(def navigate-privacy (conj navigate :privacy))
(def navigate-tos (conj navigate :tos))
(def navigate-sign-in (conj navigate :sign-in))
(def navigate-sign-up (conj navigate :sign-up))
(def navigate-forgot-password (conj navigate :forgot-password))
(def navigate-reset-password (conj navigate :reset-password))
(def navigate-manage-account (conj navigate :manage-account))
(def navigate-cart (conj navigate :cart))

(def navigate-stylist (conj navigate :stylist))
(def navigate-stylist-commissions (conj navigate-stylist :commissions))
(def navigate-stylist-referrals (conj navigate-stylist :referrals))
(def navigate-stylist-bonus-credit (conj navigate-stylist :bonus-credit))

(def navigate-checkout (conj navigate :checkout))
(def navigate-checkout-address (conj navigate-checkout :address))
(def navigate-checkout-delivery (conj navigate-checkout :delivery))
(def navigate-checkout-payment (conj navigate-checkout :payment))
(def navigate-checkout-confirmation (conj navigate-checkout :confirmation))

(def control [:control])
(def control-menu (conj control :menu))
(def control-menu-expand (conj control-menu :expand))
(def control-menu-collapse (conj control-menu :collapse))
(def control-account-menu (conj control :account-menu))
(def control-account-menu-expand (conj control-account-menu :expand))
(def control-account-menu-collapse (conj control-account-menu :collapse))

(def control-sign-in (conj control :sign-in))
(def control-sign-in-change (conj control-sign-in :change))
(def control-sign-in-submit (conj control-sign-in :submit))
(def control-sign-out (conj control :sign-out))
(def control-sign-up (conj control :sign-up))
(def control-sign-up-change (conj control-sign-up :change))
(def control-sign-up-submit (conj control-sign-up :submit))
(def control-forgot-password (conj control :forgot-password))
(def control-forgot-password-change (conj control-forgot-password :change))
(def control-forgot-password-submit (conj control-forgot-password :submit))
(def control-reset-password (conj control :reset-password))
(def control-reset-password-change (conj control-reset-password :change))
(def control-reset-password-submit (conj control-reset-password :submit))
(def control-manage-account (conj control :manage-account))
(def control-manage-account-change (conj control-manage-account :change))
(def control-manage-account-submit (conj control-manage-account :submit))

(def control-browse (conj control :browse))
(def control-browse-variant (conj control-browse :variant))
(def control-browse-variant-select (conj control-browse-variant :select))
(def control-browse-variant-inc-quantity (conj control-browse-variant :inc-quantity))
(def control-browse-variant-dec-quantity (conj control-browse-variant :dec-quantity))
(def control-browse-variant-set-quantity (conj control-browse-variant :set-quantity))
(def control-browse-add-to-bag (conj control-browse :add-to-bag))

(def control-checkout (conj control :checkout))
(def control-checkout-change (conj control-checkout :change))

(def api [:api])
(def api-success (conj api :success))

(def api-success-taxons (conj api-success :taxons))
(def api-success-store (conj api-success :store))
(def api-success-category (conj api-success :category))
(def api-success-products (conj api-success :products))
(def api-success-product (conj api-success :product))
(def api-success-sign-in (conj api-success :sign-in))
(def api-success-sign-up (conj api-success :sign-up))
(def api-success-forgot-password (conj api-success :forgot-password))
(def api-success-reset-password (conj api-success :reset-password))
(def api-success-manage-account (conj api-success :manage-account))
(def api-success-stylist-commissions (conj api-success :stylist-commissions))
(def api-success-stylist-referral-program (conj api-success :stylist-referral-program))
(def api-success-create-order (conj api-success :create-order))
(def api-success-add-to-bag (conj api-success :add-to-bag))
(def api-success-fetch-order (conj api-success :fetch-order))
(def api-success-sms-number (conj api-success :sms-number))

(def flash [:flash])
(def flash-show [:show])
(def flash-dismiss [:dismiss])
(def flash-show-success (conj flash-show :success))
(def flash-dismiss-success (conj flash-dismiss :success))
