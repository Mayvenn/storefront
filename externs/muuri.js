/**********************************************************************
 * Extern for Muuri
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var Muuri = {
  "Animator": function () {},
  "AutoScroller": {
    "AXIS_X": {},
    "AXIS_Y": {},
    "BACKWARD": {},
    "DOWN": {},
    "FORWARD": {},
    "LEFT": {},
    "RIGHT": {},
    "UP": {},
    "pointerHandle": function () {},
    "smoothSpeed": function () {}
  },
  "Dragger": {
    "_activateInstance": function () {},
    "_activeInstances": {},
    "_bindListeners": function () {},
    "_deactivateInstance": function () {},
    "_emitter": {
      "_clearOnEmit": {},
      "_counter": {},
      "_events": {},
      "_queue": {},
      "burst": function () {},
      "clear": function () {},
      "countListeners": function () {},
      "destroy": function () {},
      "emit": function () {},
      "off": function () {},
      "on": function () {}
    },
    "_emitterEvents": {
      "cancel": {},
      "end": {},
      "move": {},
      "start": {}
    },
    "_getEventPointerId": function () {},
    "_getTouchById": function () {},
    "_inputEvents": {
      "cancel": {},
      "end": {},
      "move": {},
      "start": {}
    },
    "_mouseEvents": {
      "cancel": {},
      "end": {},
      "move": {},
      "start": {}
    },
    "_msPointerEvents": {
      "cancel": {},
      "end": {},
      "move": {},
      "start": {}
    },
    "_onCancel": function () {},
    "_onEnd": function () {},
    "_onMove": function () {},
    "_pointerEvents": {
      "cancel": {},
      "end": {},
      "move": {},
      "start": {}
    },
    "_preventDefault": function () {},
    "_touchEvents": {
      "cancel": {},
      "end": {},
      "move": {},
      "start": {}
    },
    "_unbindListeners": function () {}
  },
  "Emitter": function () {},
  "Item": {
    "_drag": {}
  },
  "ItemDrag": {
    "_dragger": {},
    "autoScroller": {
      "_actionPool": {
        "createItem": function () {},
        "pick": function () {},
        "pool": {},
        "release": function () {},
        "releaseItem": function () {},
        "reset": function () {}
      },
      "_actions": {},
      "_applyActions": function () {},
      "_cancelItemScroll": function () {},
      "_checkItemOverlap": function () {},
      "_dragDirections": {},
      "_dragPositions": {},
      "_getItemHandleRect": function () {},
      "_isDestroyed": {},
      "_isTicking": {},
      "_items": {},
      "_overlapCheckInterval": {},
      "_readTick": function () {},
      "_requestAction": function () {},
      "_requestItemScroll": function () {},
      "_requestOverlapCheck": {},
      "_requestPool": {
        "createItem": function () {},
        "pick": function () {},
        "pool": {},
        "release": function () {},
        "releaseItem": function () {},
        "reset": function () {}
      },
      "_requests": {
        "1": {},
        "2": {}
      },
      "_startTicking": function () {},
      "_stopTicking": function () {},
      "_tickDeltaTime": {},
      "_tickTime": {},
      "_updateActions": function () {},
      "_updateDragDirection": function () {},
      "_updateRequests": function () {},
      "_updateScrollRequest": function () {},
      "_writeTick": function () {},
      "addItem": function () {},
      "destroy": function () {},
      "isItemScrolling": function () {},
      "isItemScrollingX": function () {},
      "isItemScrollingY": function () {},
      "removeItem": function () {},
      "updateItem": function () {}
    },
    "defaultSortPredicate": function () {},
    "defaultStartPredicate": function () {}
  },
  "ItemDragPlaceholder": function () {},
  "ItemDragRelease": function () {},
  "ItemLayout": function () {},
  "ItemMigrate": function () {},
  "ItemVisibility": function () {},
  "Packer": function () {},
  "defaultOptions": {
    "containerClass": {},
    "dragAutoScroll": {
      "handle": {},
      "onStart": {},
      "onStop": {},
      "safeZone": {},
      "smoothStop": {},
      "sortDuringScroll": {},
      "speed": function () {},
      "targets": {},
      "threshold": {}
    },
    "dragAxis": {},
    "dragContainer": {},
    "dragCssProps": {
      "contentZooming": {},
      "tapHighlightColor": {},
      "touchAction": {},
      "touchCallout": {},
      "userDrag": {},
      "userSelect": {}
    },
    "dragEnabled": {},
    "dragHandle": {},
    "dragPlaceholder": {
      "createElement": {},
      "enabled": {},
      "onCreate": {},
      "onRemove": {}
    },
    "dragRelease": {
      "duration": {},
      "easing": {},
      "useDragContainer": {}
    },
    "dragSort": {},
    "dragSortHeuristics": {
      "minBounceBackAngle": {},
      "minDragDistance": {},
      "sortInterval": {}
    },
    "dragSortPredicate": {
      "action": {},
      "migrateAction": {},
      "threshold": {}
    },
    "dragStartPredicate": {
      "delay": {},
      "distance": {}
    },
    "hiddenStyles": {
      "opacity": {},
      "transform": {}
    },
    "hideDuration": {},
    "hideEasing": {},
    "itemClass": {},
    "itemDraggingClass": {},
    "itemHiddenClass": {},
    "itemPlaceholderClass": {},
    "itemPositioningClass": {},
    "itemReleasingClass": {},
    "itemVisibleClass": {},
    "items": {},
    "layout": {
      "alignBottom": {},
      "alignRight": {},
      "fillGaps": {},
      "horizontal": {},
      "rounding": {}
    },
    "layoutDuration": {},
    "layoutEasing": {},
    "layoutOnInit": {},
    "layoutOnResize": {},
    "showDuration": {},
    "showEasing": {},
    "sortData": {},
    "visibleStyles": {
      "opacity": {},
      "transform": {}
    }
  },
  "defaultPacker": {
    "_finalizeLayout": function () {},
    "_layoutCallbacks": {},
    "_layoutQueue": {},
    "_layoutWorkerData": {},
    "_layoutWorkers": {},
    "_layouts": {},
    "_onWorkerMessage": function () {},
    "_options": {},
    "_processor": {},
    "_sendToWorker": function () {},
    "_workers": {},
    "cancelLayout": function () {},
    "createLayout": function () {},
    "destroy": function () {},
    "setOptions": function () {}
  }
};
Muuri.prototype = {
  "_emit": function () {},
  "_hasListeners": function () {},
  "_onLayoutDataReceived": function () {},
  "_refreshDimensions": function () {},
  "_setItemsVisibility": function () {},
  "_updateBorders": function () {},
  "_updateBoundingRect": function () {},
  "add": function () {},
  "destroy": function () {},
  "filter": function () {},
  "getElement": function () {},
  "getItem": function () {},
  "getItems": function () {},
  "hide": function () {},
  "layout": function () {},
  "move": function () {},
  "off": function () {},
  "on": function () {},
  "refreshItems": function () {},
  "refreshSortData": function () {},
  "remove": function () {},
  "send": function () {},
  "show": function () {},
  "sort": function () {},
  "synchronize": function () {}
};
Muuri.Animator.prototype = {
  "_onFinish": function () {},
  "destroy": function () {},
  "getCurrentStyles": function () {},
  "isAnimating": function () {},
  "start": function () {},
  "stop": function () {}
};
Muuri.AutoScroller.prototype = {
  "_applyActions": function () {},
  "_cancelItemScroll": function () {},
  "_checkItemOverlap": function () {},
  "_getItemHandleRect": function () {},
  "_readTick": function () {},
  "_requestAction": function () {},
  "_requestItemScroll": function () {},
  "_startTicking": function () {},
  "_stopTicking": function () {},
  "_updateActions": function () {},
  "_updateDragDirection": function () {},
  "_updateRequests": function () {},
  "_updateScrollRequest": function () {},
  "_writeTick": function () {},
  "addItem": function () {},
  "destroy": function () {},
  "isItemScrolling": function () {},
  "isItemScrollingX": function () {},
  "isItemScrollingY": function () {},
  "removeItem": function () {},
  "updateItem": function () {}
};
Muuri.Dragger.prototype = {
  "_createEvent": function () {},
  "_emit": function () {},
  "_getTrackedTouch": function () {},
  "_onCancel": function () {},
  "_onEnd": function () {},
  "_onMove": function () {},
  "_onStart": function () {},
  "_reset": function () {},
  "destroy": function () {},
  "getDeltaTime": function () {},
  "getDeltaX": function () {},
  "getDeltaY": function () {},
  "getDistance": function () {},
  "isActive": function () {},
  "off": function () {},
  "on": function () {},
  "setCssProps": function () {},
  "setTouchAction": function () {}
};
Muuri.Emitter.prototype = {
  "burst": function () {},
  "clear": function () {},
  "countListeners": function () {},
  "destroy": function () {},
  "emit": function () {},
  "off": function () {},
  "on": function () {}
};
Muuri.Item.prototype = {
  "_addToLayout": function () {},
  "_canSkipLayout": function () {},
  "_destroy": function () {},
  "_refreshDimensions": function () {},
  "_refreshSortData": function () {},
  "_removeFromLayout": function () {},
  "_setTranslate": function () {},
  "getElement": function () {},
  "getGrid": function () {},
  "getHeight": function () {},
  "getMargin": function () {},
  "getPosition": function () {},
  "getWidth": function () {},
  "isActive": function () {},
  "isDestroyed": function () {},
  "isDragging": function () {},
  "isHiding": function () {},
  "isPositioning": function () {},
  "isReleasing": function () {},
  "isShowing": function () {},
  "isVisible": function () {}
};
Muuri.ItemDrag.prototype = {
  "_applyMove": function () {},
  "_applyScroll": function () {},
  "_applyStart": function () {},
  "_bindScrollListeners": function () {},
  "_cancelSort": function () {},
  "_checkHeuristics": function () {},
  "_checkOverlap": function () {},
  "_finishMigration": function () {},
  "_finishSort": function () {},
  "_finishStartPredicate": function () {},
  "_forceResolveStartPredicate": function () {},
  "_getGrid": function () {},
  "_handleSort": function () {},
  "_handleSortDelayed": function () {},
  "_onEnd": function () {},
  "_onMove": function () {},
  "_onScroll": function () {},
  "_onStart": function () {},
  "_preEndCheck": function () {},
  "_preStartCheck": function () {},
  "_prepareMove": function () {},
  "_prepareScroll": function () {},
  "_prepareStart": function () {},
  "_reset": function () {},
  "_resetHeuristics": function () {},
  "_resetStartPredicate": function () {},
  "_resolveStartPredicate": function () {},
  "_unbindScrollListeners": function () {},
  "destroy": function () {},
  "sort": function () {},
  "stop": function () {}
};
Muuri.ItemDragPlaceholder.prototype = {
  "_onHide": function () {},
  "_onLayoutEnd": function () {},
  "_onLayoutStart": function () {},
  "_onMigrate": function () {},
  "_onReleaseEnd": function () {},
  "_setupAnimation": function () {},
  "_startAnimation": function () {},
  "_updateDimensions": function () {},
  "create": function () {},
  "destroy": function () {},
  "getElement": function () {},
  "isActive": function () {},
  "reset": function () {},
  "updateDimensions": function () {}
};
Muuri.ItemDragRelease.prototype = {
  "_placeToGrid": function () {},
  "_reset": function () {},
  "destroy": function () {},
  "isJustReleased": function () {},
  "start": function () {},
  "stop": function () {}
};
Muuri.ItemLayout.prototype = {
  "_finish": function () {},
  "_setupAnimation": function () {},
  "_startAnimation": function () {},
  "_updateOffsets": function () {},
  "destroy": function () {},
  "start": function () {},
  "stop": function () {}
};
Muuri.ItemMigrate.prototype = {
  "destroy": function () {},
  "start": function () {},
  "stop": function () {}
};
Muuri.ItemVisibility.prototype = {
  "_finishHide": function () {},
  "_finishShow": function () {},
  "_removeCurrentStyles": function () {},
  "_startAnimation": function () {},
  "destroy": function () {},
  "hide": function () {},
  "setStyles": function () {},
  "show": function () {},
  "stop": function () {}
};
Muuri.Packer.prototype = {
  "_finalizeLayout": function () {},
  "_onWorkerMessage": function () {},
  "_sendToWorker": function () {},
  "cancelLayout": function () {},
  "createLayout": function () {},
  "destroy": function () {},
  "setOptions": function () {}
};
/**********************************************************************
 * End Generated Extern for Muuri
/**********************************************************************/
